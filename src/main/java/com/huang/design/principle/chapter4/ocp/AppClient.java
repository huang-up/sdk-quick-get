package com.huang.design.principle.chapter4.ocp;

/**
 * 开放-封闭原则：软件实体（类、模块、函数等）应该可以扩展，但是不可以修改。
 * 两个特征：对于扩展是开放的；对于修改是封闭的。
 *
 * 我们希望在开发工作开展不久就知道可能发生的变化。查明可能发生的变化所等待的时间越长，要创建正确的抽象越困难。
 * 开放-封闭原则是面向对象设计的核心所在。遵循这个原则可以带来面向对象技术所声称的巨大好处，也就是可维护、可扩展、可复用、灵活性好。
 * 开发人员应该仅对程序中呈现出频繁比那话的那些部分作出抽象，然而，对于应用程序中每个部分都刻意地进行抽象并不是一个好主意。
 * 拒绝不成熟的抽象和抽象本身一样重要。切记切记。
 *
 * Created by admin on 2017/9/21.
 */
public class AppClient {
}
